@{
    ViewData["Title"] = "Email";
}

<div class="text-center">
    <h1 class="display-4">Email Confirmation</h1>
</div>

<p>
    Общая схема:
</p>
<ul>
    <li>Пользователь вводит (при регистрации или в кабинете) адрес электронной почты</li>
    <li>Генерируем случайный код и отсылаем его на веденную почту</li>
    <li>Сохраняем этот код в БД для данного пользователя. Наличие кода говорит
        про отсутствие подтверждения почты</li>
    <li>При входе пользователя в систему (в кабинет) оповещаем о неподтвержденной почте</li>
    <li>Разрабатываем форму для введения кода подтверждения</li>
    <li>Разрабатываем страницу, переход на которую также подтввердит электронную почту
        (ссылка в письме)
    </li>
</ul>

<p>
    Шаг 1 - регистрируем почту для сайта. Не рекоммендуется использовать личные
    (персональные) аккаунты, рекоммендуется под каждый проект создавать новые аккаунты.
    На примере Google аккаунта - необходима двухфакторная аутентификация
</p>


<h2>Configuration</h2>
<ul>
    <li>Host: @ViewData["config_host"]</li>
    <li>Port: @ViewData["config_port"]</li>
    <li>Email: @ViewData["config_email"] </li>
    <li>Ssl: @ViewData["config_ssl"]</li>
</ul>

<p>
    Ссылка с подтверждением кода. Особенность - переход по данной ссылке,
    скорее всего, ьудет без сессийной авторизации.
    Поэтому в ссылке должны быть данные про самого пользователя.
    Но, добавление каких-то постоянных данных, к примеру, ID, нерекоммендовано,
    посколько может быть использовано повторно. Рекоммендуется: генерировать токены,
    которые будут содержать информацию о пользователе и о почте, которая подтвержается.
</p>
<p>
    Практично - это создание новой таблицы [token]-[user]-[email]-[moment]
</p>