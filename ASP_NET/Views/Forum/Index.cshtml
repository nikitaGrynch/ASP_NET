@model ASP_NET.Models.Forum.ForumIndexModel

@{
    ViewData["Title"] = "Forum";
}

<div class="text-center">
    <h1 class="display-4">Forum</h1>
</div>

<div class="row">
    <div class="col col-8">
    @foreach (var Section in Model.Sections)
    {
        @Html.DisplayFor(m => Section, "Section")
        ;
    }
    </div>
</div>

@if (Model.UserCanCreate)
{
    <div class="row">
        <div class="col col-6">
            <h5>@(Model.FormModel is null ? "" : Model.FormModel.Title)</h5>
            <h5 class="modal-title" id="authModalLabel">Create new section</h5>
            @if (Model.CreateMessage is not null)
            {
                <div class="alert alert-@(Model.IsMessagePositive == true ? "success" : "danger")" role="alert">
                    @Model.CreateMessage
                </div>
            }
            <form asp-controller="Forum" asp-action="CreateSection" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="section-title">Title</label>
                    <input type="text" class="form-control"
                           value="@(Model.FormModel is null ? "" : Model.FormModel.Title)"
                           id="section-title" name="section-title"
                           placeholder="Section Title"/>
                </div>
                <div class="form-group">
                    <label for="section-description" class="form-label">Description</label>
                    <textarea class="form-control" id="section-description" rows="3"
                    name="section-description"
                    placeholder="Section Description">@(Model.FormModel is null ? "" : Model.FormModel.Description)</textarea>
                </div>
                <div class="form-group">
                    <label for="section-logo" class="form-label">Upload section logo</label>
                    <input type="file" id="section-logo" name="section-logo" class="form-control" />
                </div>
                <button type="submit" class="btn btn-light my-3">Create</button>
            </form>
        </div>
    </div>
}

<script >
    document.addEventListener("DOMContentLoaded", () => {
        for (let elem of document.querySelectorAll("[data-rate]")) {
            elem.addEventListener('click', rateClick);
        }
    });
    function rateClick(e){
        const userSidElement = document.querySelector("[data-user-sid]");
        if (!userSidElement){
            // unauthenticated
            alert("You must be authenticated to rate");
            return;
        }
        const target = e.target.closest("span");
        const isGiven = target.getAttribute("data-rate-given") === "True";
        const data = {
            "itemId": target.getAttribute("data-rate"),
            "userId": userSidElement.getAttribute("data-user-sid"),
            "value": target.getAttribute("data-rate-value")
        }
        const apiMethod = isGiven ? "DELETE" : "POST";
        console.log(data);
        fetch("/api/rates", {
             method: apiMethod,
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
             })
             .then(r => {if (r.status < 400) window.location.reload(); return r.json()})
             .then(j => console.log(j));
    }
</script>